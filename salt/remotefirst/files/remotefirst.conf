server {

    listen 0.0.0.0:80;
    listen [::]:80;

    server_name {{ salt['pillar.get']('remotefirst:site:url') }};
    return  301 https://$server_name$request_uri;
    root {{ salt['pillar.get']('remotefirst:site:root') }};

    access_log /var/log/nginx/remotefirst.log;
    error_log /var/log/nginx/remotefirst_err.log;

    location = / {
        # Instead of handling the index, just
        # rewrite / to /index.html
        rewrite ^ /index.html;
    }

    location / {
        # Serve a .gz version if it exists
        gzip_static on;
        # Try to serve the clean url version first
        try_files $uri.htm $uri.html $uri =404;
    }
    
    location /static {
        alias {{ salt['pillar.get']('remotefirst:site:root') }}/static;
        autoindex on;
        expires 1y;
    }

}

server {

    listen 0.0.0.0:443;
    listen [::]:443;

    ssl on;
    ssl_certificate /etc/letsencrypt/live/{{ salt['pillar.get']('remotefirst:site:url') }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ salt['pillar.get']('remotefirst:site:url') }}/privkey.pem;
    server_name {{ salt['pillar.get']('remotefirst:site:url') }};
    root {{ salt['pillar.get']('remotefirst:site:root') }};
    
    access_log /var/log/nginx/remotefirst.log;
    error_log /var/log/nginx/remotefirst_err.log;

    location / {
        # Serve a .gz version if it exists
        gzip_static on;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        if (!-f $request_filename) {
            proxy_pass http://127.0.0.1:8000;
            break;
        }
    }

    location /static {
        alias {{ salt['pillar.get']('remotefirst:site:root') }}/static;
        autoindex on;
        expires 1y;
    }
}
